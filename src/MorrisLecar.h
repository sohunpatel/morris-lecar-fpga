#ifndef MORRIS_LECAR_H
#define MORRIS_LECAR_H

#include <inttypes.h>

#include "ap_axi_sdata.h"
#include "ap_fixed.h"
#include "hls_math.h"
#include "hls_stream.h"

/* Options */
//#define FIXED
//#defined LUT

typedef ap_axis<32, 2, 5, 6> stream_t;
typedef ap_axis<128, 2, 5, 6> stream_param_t;
#ifdef FIXED
typedef ap_fixed<32, 8> data_t;
#else
typedef float data_t;
#endif

#define T_STOP 1500
#define DT 0.1
#define CM_M 2
#define V_REST -70
#define EL_M -70
#define EK_M -100
#define ENa_M 50
#define G_FAST 20
#define G_SLOW 20
#define G_LEAK 2
#define BETA_M -1.2
#define GAMMA_M 18
#define GAMMA_W 10
#define BETA_W -13
#define PHI 0.15

static data_t t_stop = T_STOP;
static data_t dt = DT;
static data_t cm_m = CM_M;
static data_t v_rest = V_REST;
static data_t el_m = EL_M;
static data_t ek_m = EK_M;
static data_t eNa_m = ENa_M;
static data_t g_fast = G_FAST;
static data_t g_slow = G_SLOW;
static data_t g_leak = G_LEAK;
static data_t beta_m = BETA_M;
static data_t gamma_m = GAMMA_M;
static data_t gamma_w = GAMMA_W;
static data_t beta_w = BETA_W;
static data_t phi = PHI;

typedef union converter {
    float f;
    uint32_t i;
} converter_t;

typedef union {
    __uint128_t total;
    struct {
        converter_t i_inj;
        converter_t g_fast;
        converter_t g_slow;
        converter_t beta_w;
    };
} params_t;

void MorrisLecar(hls::stream<stream_t> &Iext, hls::stream<stream_t> &V_out,
                 data_t *V, data_t *W);

#ifdef LUT
data_t tanh_apr(data_t x);
data_t sech_apr(data_t x);

static data_t tanh_LUT[256 + 1] = {
    0.0000000, 0.0117182, 0.0234332, 0.0351418, 0.0468407, 0.0585268, 0.0701969,
    0.0818477, 0.0934763, 0.1050794, 0.1166540, 0.1281970, 0.1397053, 0.1511760,
    0.1626062, 0.1739929, 0.1853332, 0.1966244, 0.2078637, 0.2190483, 0.2301757,
    0.2412432, 0.2522484, 0.2631886, 0.2740616, 0.2848650, 0.2955964, 0.3062538,
    0.3168350, 0.3273379, 0.3377605, 0.3481010, 0.3583574, 0.3685280, 0.3786112,
    0.3886053, 0.3985088, 0.4083203, 0.4180383, 0.4276615, 0.4371888, 0.4466189,
    0.4559509, 0.4651837, 0.4743163, 0.4833480, 0.4922780, 0.5011055, 0.5098300,
    0.5184508, 0.5269675, 0.5353797, 0.5436870, 0.5518891, 0.5599858, 0.5679769,
    0.5758624, 0.5836421, 0.5913162, 0.5988846, 0.6063476, 0.6137052, 0.6209578,
    0.6281056, 0.6351490, 0.6420882, 0.6489239, 0.6556563, 0.6622861, 0.6688138,
    0.6752399, 0.6815652, 0.6877902, 0.6939157, 0.6999424, 0.7058710, 0.7117023,
    0.7174372, 0.7230764, 0.7286209, 0.7340715, 0.7394292, 0.7446947, 0.7498692,
    0.7549536, 0.7599487, 0.7648557, 0.7696755, 0.7744092, 0.7790577, 0.7836221,
    0.7881034, 0.7925027, 0.7968211, 0.8010596, 0.8052192, 0.8093011, 0.8133062,
    0.8172358, 0.8210908, 0.8248723, 0.8285814, 0.8322192, 0.8357867, 0.8392851,
    0.8427152, 0.8460783, 0.8493754, 0.8526075, 0.8557756, 0.8588808, 0.8619241,
    0.8649066, 0.8678292, 0.8706930, 0.8734990, 0.8762480, 0.8789412, 0.8815795,
    0.8841638, 0.8866951, 0.8891744, 0.8916025, 0.8939805, 0.8963091, 0.8985893,
    0.9008220, 0.9030080, 0.9051483, 0.9072436, 0.9092948, 0.9113028, 0.9132684,
    0.9151923, 0.9170755, 0.9189185, 0.9207223, 0.9224876, 0.9242151, 0.9259057,
    0.9275599, 0.9291785, 0.9307623, 0.9323119, 0.9338280, 0.9353113, 0.9367625,
    0.9381821, 0.9395708, 0.9409293, 0.9422582, 0.9435580, 0.9448294, 0.9460730,
    0.9472893, 0.9484789, 0.9496423, 0.9507801, 0.9518929, 0.9529811, 0.9540453,
    0.9550859, 0.9561035, 0.9570985, 0.9580715, 0.9590229, 0.9599531, 0.9608626,
    0.9617519, 0.9626214, 0.9634714, 0.9643025, 0.9651150, 0.9659094, 0.9666859,
    0.9674451, 0.9681872, 0.9689127, 0.9696219, 0.9703152, 0.9709928, 0.9716553,
    0.9723028, 0.9729357, 0.9735544, 0.9741591, 0.9747501, 0.9753278, 0.9758924,
    0.9764443, 0.9769837, 0.9775109, 0.9780261, 0.9785297, 0.9790218, 0.9795028,
    0.9799729, 0.9804322, 0.9808812, 0.9813200, 0.9817487, 0.9821677, 0.9825772,
    0.9829774, 0.9833684, 0.9837506, 0.9841240, 0.9844889, 0.9848455, 0.9851940,
    0.9855345, 0.9858672, 0.9861923, 0.9865100, 0.9868205, 0.9871238, 0.9874202,
    0.9877098, 0.9879928, 0.9882693, 0.9885395, 0.9888035, 0.9890615, 0.9893135,
    0.9895597, 0.9898004, 0.9900355, 0.9902652, 0.9904896, 0.9907089, 0.9909231,
    0.9911325, 0.9913370, 0.9915368, 0.9917321, 0.9919228, 0.9921092, 0.9922913,
    0.9924692, 0.9926430, 0.9928128, 0.9929787, 0.9931408, 0.9932992, 0.9934539,
    0.9936050, 0.9937527, 0.9938970, 0.9940379, 0.9941756, 0.9943102, 0.9944416,
    0.9945700, 0.9946955, 0.9948180, 0.9949378, 0.9950548};

static data_t sech_LUT[256 + 1] = {
    1.0000000, 0.9997254, 0.9989024, 0.9975332, 0.9956215, 0.9931726, 0.9901931,
    0.9866911, 0.9826757, 0.9781578, 0.9731491, 0.9676625, 0.9617121, 0.9553129,
    0.9484807, 0.9412321, 0.9335845, 0.9255558, 0.9171645, 0.9084294, 0.8993698,
    0.8900049, 0.8803545, 0.8704380, 0.8602752, 0.8498854, 0.8392881, 0.8285022,
    0.8175466, 0.8064398, 0.7951997, 0.7838440, 0.7723897, 0.7608534, 0.7492510,
    0.7375982, 0.7259095, 0.7141993, 0.7024812, 0.6907680, 0.6790722, 0.6674052,
    0.6557782, 0.6442016, 0.6326851, 0.6212378, 0.6098683, 0.5985846, 0.5873941,
    0.5763034, 0.5653191, 0.5544467, 0.5436916, 0.5330586, 0.5225519, 0.5121755,
    0.5019328, 0.4918269, 0.4818603, 0.4720356, 0.4623545, 0.4528188, 0.4434299,
    0.4341887, 0.4250960, 0.4161525, 0.4073583, 0.3987137, 0.3902184, 0.3818722,
    0.3736745, 0.3656248, 0.3577222, 0.3499658, 0.3423546, 0.3348873, 0.3275627,
    0.3203795, 0.3133360, 0.3064309, 0.2996625, 0.2930292, 0.2865292, 0.2801607,
    0.2739219, 0.2678111, 0.2618262, 0.2559655, 0.2502269, 0.2446086, 0.2391086,
    0.2337248, 0.2284555, 0.2232985, 0.2182520, 0.2133140, 0.2084824, 0.2037554,
    0.1991311, 0.1946075, 0.1901827, 0.1858547, 0.1816219, 0.1774822, 0.1734339,
    0.1694751, 0.1656040, 0.1618190, 0.1581182, 0.1544999, 0.1509624, 0.1475041,
    0.1441232, 0.1408183, 0.1375876, 0.1344297, 0.1313429, 0.1283258, 0.1253769,
    0.1224947, 0.1196777, 0.1169246, 0.1142340, 0.1116045, 0.1090348, 0.1065235,
    0.1040695, 0.1016714, 0.0993279, 0.0970380, 0.0948003, 0.0926138, 0.0904774,
    0.0883898, 0.0863499, 0.0843569, 0.0824095, 0.0805067, 0.0786476, 0.0768312,
    0.0750565, 0.0733225, 0.0716284, 0.0699733, 0.0683562, 0.0667763, 0.0652328,
    0.0637248, 0.0622515, 0.0608121, 0.0594059, 0.0580321, 0.0566900, 0.0553788,
    0.0540979, 0.0528465, 0.0516239, 0.0504296, 0.0492628, 0.0481230, 0.0470095,
    0.0459217, 0.0448590, 0.0438208, 0.0428067, 0.0418159, 0.0408481, 0.0399026,
    0.0389790, 0.0380767, 0.0371953, 0.0363342, 0.0354931, 0.0346714, 0.0338687,
    0.0330845, 0.0323185, 0.0315703, 0.0308393, 0.0301252, 0.0294277, 0.0287463,
    0.0280806, 0.0274304, 0.0267952, 0.0261747, 0.0255686, 0.0249765, 0.0243981,
    0.0238330, 0.0232811, 0.0227419, 0.0222153, 0.0217008, 0.0211982, 0.0207072,
    0.0202276, 0.0197592, 0.0193015, 0.0188545, 0.0184178, 0.0179912, 0.0175745,
    0.0171675, 0.0167698, 0.0163814, 0.0160020, 0.0156314, 0.0152693, 0.0149156,
    0.0145701, 0.0142327, 0.0139030, 0.0135810, 0.0132664, 0.0129591, 0.0126589,
    0.0123657, 0.0120793, 0.0117995, 0.0115262, 0.0112592, 0.0109984, 0.0107436,
    0.0104947, 0.0102517, 0.0100142, 0.0097822, 0.0095556, 0.0093343, 0.0091181,
    0.0089068, 0.0087005, 0.0084990, 0.0083021, 0.0081098, 0.0079219, 0.0077384,
    0.0075592, 0.0073841, 0.0072130, 0.0070459, 0.0068827, 0.0067233, 0.0065676,
    0.0064154, 0.0062668, 0.0061216, 0.0059798, 0.0058413, 0.0057060, 0.0055738,
    0.0054447, 0.0053186, 0.0051954, 0.0050750, 0.0049575};
#endif // LUT

#endif // MORRIS_LECAR_H
